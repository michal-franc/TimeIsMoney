<Window x:Class="DekstopTodo.OverlayWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:custom="clr-namespace:XMLModule;assembly=XMLModule"
        Title="OverlayWindow" Height="200" Width="210"  Background="Transparent" AllowsTransparency="True"  ShowInTaskbar="False" WindowStyle="None">
    <Window.Resources>

        <SolidColorBrush x:Key="ExpanderColor" Color="Yellow" />
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Height="15" Width="15" Background="Transparent">
                            <Ellipse  Name="btn" Stroke="{StaticResource ExpanderColor}" StrokeThickness="1" Width="7" Height="7"></Ellipse>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Stroke" TargetName="btn" Value="{StaticResource ExpanderColor}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Stroke" TargetName="btn" Value="{StaticResource ExpanderColor}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="btn" Property="Fill" Value="{StaticResource ExpanderColor}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="btn" Property="Fill" Value="{StaticResource ExpanderColor}"/>
                            </MultiTrigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="btn" Property="Fill" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CompleteTaskButton" TargetType="{x:Type Button}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Height="15" Width="15" Background="Transparent">
                            <Polyline Name="line" Points="0,0 2,6 6,-2" Stroke="{StaticResource ExpanderColor}" StrokeThickness="1" >
                            </Polyline>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="line" Property="StrokeThickness" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="line" Property="StrokeThickness" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="Foreground" Value="Yellow"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.BitmapEffect>
                                    <DropShadowBitmapEffect/>
                                </ToggleButton.BitmapEffect>
                            </ToggleButton>
                            <Border x:Name="Bd" SnapsToDevicePixels="true" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="Yellow"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="Yellow"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>      
        <Style x:Key="TextBlockButton" TargetType="{x:Type TextBlock}" >
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="8"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="Focusable" Value="False" />
            <Style.Triggers>
                <Trigger Property="TextBox.IsMouseOver"    Value="True">
                    <Setter Property="Foreground" Value="Yellow"/>
                </Trigger>
                <Trigger Property="TextBox.IsMouseOver"    Value="False">
                    <Setter Property="Foreground"  Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="StandardBorderBrush" Color="Yellow" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="Black" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="Black" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="Black" />
        <SolidColorBrush x:Key="NormalBrush" Color="Black" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="Black" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="Black" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="Yellow" />
        <SolidColorBrush x:Key="GlyphBrush" Color="Yellow" />
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border  Name="Border"  Margin="1" CornerRadius="2" Background="{StaticResource NormalBrush}"
                                BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="{Binding Path=Content,
                            RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background"  Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"  Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Black" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="2" Background="Black" />
                <RepeatButton  Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track   Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                            <RepeatButton  Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                           <Thumb  Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}"  BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                           <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
               </Track>
                <RepeatButton  Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
      </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar"  TargetType="{x:Type ScrollBar}">
           <Grid >
                <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="5"/>
                        <ColumnDefinition Width="0.00001*"/>
                        <ColumnDefinition MaxWidth="5"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0" />
                                                                <RepeatButton  Grid.Column="0"  Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand"  Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"  Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1"  Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                       <RepeatButton  Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                     </Track.IncreaseRepeatButton>
                 </Track>
                 <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
          </Grid>
      </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="0" />
                <Setter Property="Template"  Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                 <Setter Property="Width" Value="8"/>
                 <Setter Property="Height" Value="Auto" />
                 <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
             </Trigger>
        </Style.Triggers>
       </Style>
        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="1"/>
                            <ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}"  Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}"   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1"  Grid.Column="1"  Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}"
                              ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                         </Grid>
                     </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
         <HierarchicalDataTemplate x:Key="TaskTemplate" ItemsSource="{Binding Childrens}" DataType="{x:Type custom:Task}" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="9*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0"  FontSize="11" Text="{Binding Path=Title}" FontWeight="Black" />
                <Button Grid.Column="1" Style="{StaticResource CompleteTaskButton}" Click="CompleteTask_Click" ></Button>
            </Grid>
        </HierarchicalDataTemplate>
        
    </Window.Resources>
    
    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="7*" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="9*" />
        </Grid.RowDefinitions>
        <Grid.BitmapEffect>
            <DropShadowBitmapEffect Color="Black" Direction="320" 
                                        ShadowDepth="10" Opacity=".5" Softness="9" />
        </Grid.BitmapEffect>
        <TextBlock Name="txtBlockProjectName" Foreground="White" FontWeight="Bold"  FontSize="14" FontStyle="Normal" FontStretch="Normal" FontFamily="Arial" Focusable="False" MouseLeftButtonDown="txtBlockProjectName_MouseLeftButtonDown"></TextBlock>
        <StackPanel Grid.Column="1" Orientation="Horizontal"   >
            <TextBlock Name="txtDay" Style="{StaticResource TextBlockButton}" Text="D " MouseLeftButtonDown="txtDay_MouseLeftButtonDown" >
            </TextBlock>
            <TextBlock Name="txtWeek" Style="{StaticResource TextBlockButton}" Text="W " MouseLeftButtonDown="txtWeek_MouseLeftButtonDown" >
            </TextBlock>
            <TextBlock Name="txtAll" Style="{StaticResource TextBlockButton}" Text="A     " MouseLeftButtonDown="txtAll_MouseLeftButtonDown">
            </TextBlock>
            <TextBlock Name="txtClose" Style="{StaticResource TextBlockButton}" Text="X " MouseLeftButtonDown="txtClose_MouseLeftButtonDown" >
            </TextBlock>
        </StackPanel>
        <Grid Grid.Row="1" Grid.ColumnSpan="2" Name="mainGrid" Height="180" Width="180" Background="Black"  Opacity="0.80"  MouseLeftButtonDown="Grid_MouseLeftButtonDown" >
            <TreeView Margin="5,5,0,0"  Name="mainTree"   Background="Transparent"  BorderBrush="Transparent" ItemTemplate="{StaticResource TaskTemplate}" >
                </TreeView>
        </Grid>
    </Grid>
</Window>
